name: CI
on:
  push:
  schedule:
    - cron: '0 0 * * 5'
jobs:
  quality:
    name: "Code Quality"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip --disable-pip-version-check
          pip install poetry --disable-pip-version-check
      - name: Install dependencies
        run: poetry install
      - name: Run mypy
        run: poetry run mypy aiospamc --junit-xml output/mypy-tests.xml
      - name: Run black
        run: poetry run black --check --diff --color .
      - name: Run interrogate
        run: poetry run interrogate
      - name: Publish test results
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: quality
          path: output/**
  unit-tests:
    name: "Run Unit Tests"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip --disable-pip-version-check
          pip install poetry --disable-pip-version-check
      - name: Install dependencies
        run: poetry install
      - name: Run unit tests
        run: >
          poetry run pytest
          --junit-xml="output/unit-tests.xml"
          --cov
          --cov-report="xml:output/coverage.xml"
          --cov-report="html:output/htmlcov"
      - name: Publish test results
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: results-${{ matrix.os }}-${{ matrix.python }}
          path: output/**
      - uses: codecov/codecov-action@v2
        name: Upload to Codecov
        if: (success() || failure())
        with:
          directory: output
          files: coverage.xml
          flags: unittests
      - uses: EnricoMi/publish-unit-test-result-action@v1
        name: Publish unit test results
        if: |
          matrix.os == 'ubuntu-latest' &&
          matrix.python == '3.10' &&
          (success() || failure())
        with:
          files: |
            **/*-tests.xml
  integration-tests:
    name: "Run Integration Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip --disable-pip-version-check
          pip install poetry --disable-pip-version-check
      - name: Install dependencies
        run: poetry install
      - name: Install SpamAssassin
        run: sudo apt-get -y install spamassassin
      - name: Run integration tests
        run: |
          poetry run pytest -m integration --junit-xml="output/integration-tests.xml"
      - name: Publish test results
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: integration
          path: output/**
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip --disable-pip-version-check
          pip install poetry --disable-pip-version-check
      - name: Package
        run: poetry build -n
      - name: Publish package
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: dist/
