name: CI
on: [push]
jobs:
  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.9'
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run mypy
        run: poetry run mypy aiospamc
      - name: Run black
        run: poetry run black --check .
      - name: Run interrogate
        run: poetry run interrogate
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.6', '3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python }}
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run unit tests
        run: |
          poetry run pytest --junit-xml="test-results/unit-tests.xml" --cov --cov-report="xml:output/coverage.xml"
      - uses: codecov/codecov-action@v2
        name: Upload to Codecov
        if: ${{ always() }}
        with:
          files: output/coverage.xml
          flags: unittests
      - name: Install SpamAssassin
        run: sudo apt-get -y install spamassassin
      - name: Run unit tests
        run: |
          poetry run pytest -m integration --junit-xml="test-results/integration-tests.xml"
      - name: Publish integration test results
        uses: actions/upload-artifact@v2
        with:
          name: integration-test-results
          path: output/integration-test-results.xml
      - name: Package
        if: ${{ matrix.python == '3.9' }}
        run: poetry build -n
      - name: Publish package
        if: ${{ matrix.python == '3.9' }}
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: dist/
  release:
    needs: [code-style, tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: package
          path: dist
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.9'
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Publish package
        run: poetry publish --dry-run -n
