name: Integration tests
on:
  push:
    branches: [ development, main, integration-test-container ]
  pull_request:
    branches: [ development ]
  schedule:
    - cron: '0 0 * * 5'
jobs:
  integration-tests:
    runs-on: ubuntu-latest
    container: ${{ matrix.image }}
    name: "Run Integration Tests"
    strategy:
      matrix:
        spamassassin: ["3.4.6", "4.0.0"]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - run: |
          apt-get update
          apt-get install python3 python3-setuptools python3-pip curl spamassassin -y
      - name: Install Poetry
        run: python3 -m pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Download SpamAssasin
        run: |
          curl -s https://dlcdn.apache.org//spamassassin/source/Mail-SpamAssassin-${{ matrix.spamassassin }}.tar.bz2 -o spamassassin.tar.bz2
          tar -xvjf spamassassin.tar.bz2
      - name: Build & Install SpamAssassin
        run: |
          ENABLE_SSL=yes perl Makefile.PL
          make
          make install
        working-directory: ./Mail-SpamAssassin-${{ matrix.spamassassin }}
      - run: sa-update
      - name: Run integration tests
        run: |
          poetry run pytest -m integration --junit-xml="output/integration-tests.xml"
      - name: Publish test results
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: output/**
