name: Release
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  release:
    name: "Upload release artifacts"
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Save tag
        run: |
          tag="$(git describe --tags --abbrev=0)"
          echo 'TAG='$tag >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Poetry
        run: pipx install poetry
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'poetry'
      - name: Install dependencies
        run: poetry install
      - name: Run unit tests
        run: poetry run pytest --junit-xml="output/unit-tests.xml"
      - name: Install SpamAssassin
        run: sudo apt-get -y install spamassassin
      - name: Run integration tests
        run: poetry run pytest -m integration --junit-xml="output/integration-tests.xml"
      - name: Publish test results
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: output/**
      - name: Build package
        run: poetry build
      - name: Publish package
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: dist/
      - name: GitHub release
        run: gh release create "$TAG" --generate-notes dist/*
        env:
          GITHUB_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
