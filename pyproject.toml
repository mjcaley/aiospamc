[tool.poetry]
name = "aiospamc"
version = "0.9.0"
description = "An asyncio-based library to communicate with SpamAssassin's SPAMD service."
authors = ["Michael Caley <mjcaley@darkarctic.com>"]
license = "MIT"
readme = "README.rst"

repository = "https://github.com/mjcaley/aiospamc"
homepage = "https://github.com/mjcaley/aiospamc"
documentation = "https://aiospamc.readthedocs.io"

classifiers = [
    'Development Status :: 4 - Beta',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Intended Audience :: Developers',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Topic :: Communications :: Email :: Filters'
]

keywords = ["spam", "spamc", "spamassassin"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]
markers = ["integration: spawn an instance of spamd and test against it"]
addopts = "-m \"not integration\""
mock_use_standalone_module = true
asyncio_mode = "auto"

[tool.coverage.run]
source = ["aiospamc"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__"
]
fail_under = 95.0

[tool.black]
target-version = ["py37"]
exclude = """
    utils |
    docs |
    example
"""

[tool.interrogate]
ignore-magic = true
fail-under = 95
exclude = ["changes", "docs", "example", "test", "util"]

[tool.poetry.dependencies]
python = "^3.7"
certifi = "*"
loguru = "^0.6.0"

[tool.poetry.dev-dependencies]
pytest = "^7.1"
pytest-cov = "^4.0"
pytest-asyncio = "^0.20"
sphinx = "^5.3"
pytest-mock = "^3.10"
mock = "^4.0"
coverage = {extras = ["toml"], version = "^6.5"}
mypy = "^0.982"
black = "^22"
interrogate = "^1.5"
trustme = "^0.9.0"
reno = "^3.5.0"
types-certifi = "^2021.10.8"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
